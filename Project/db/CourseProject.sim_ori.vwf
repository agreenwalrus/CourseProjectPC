/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("address_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("address_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address_in";
}

SIGNAL("address_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("enable_cache_mem")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("enable_data_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HIT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("memory_clk_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("offset_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bank_number")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bank_number[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bank_number";
}

SIGNAL("bank_number[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bank_number";
}

SIGNAL("bank_to_use_LRU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bank_to_use_LRU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bank_to_use_LRU";
}

SIGNAL("bank_to_use_LRU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bank_to_use_LRU";
}

SIGNAL("bank_to_use_TAG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bank_to_use_TAG[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bank_to_use_TAG";
}

SIGNAL("bank_to_use_TAG[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bank_to_use_TAG";
}

SIGNAL("cache_mem_write_impulse")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("is_busy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("is_changed")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("memory_clk_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prev_tag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prev_tag[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prev_tag";
}

SIGNAL("prev_tag[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prev_tag";
}

SIGNAL("prev_tag[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prev_tag";
}

SIGNAL("prev_tag[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prev_tag";
}

SIGNAL("equal_tags")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("start_read_memory")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("start_write_memory")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset_busy_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("set_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("set_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "set_in";
}

SIGNAL("set_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "set_in";
}

SIGNAL("tag_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tag_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_in";
}

SIGNAL("tag_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_in";
}

SIGNAL("tag_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_in";
}

SIGNAL("tag_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tag_in";
}

TRANSITION_LIST("address_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 488.0;
	}
}

TRANSITION_LIST("address_in[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 256.0;
			LEVEL 1 FOR 256.0;
		}
		LEVEL 0 FOR 256.0;
		LEVEL 1 FOR 232.0;
	}
}

TRANSITION_LIST("address_in[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 104.0;
	}
}

TRANSITION_LIST("address_in[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
		}
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("address_in[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("address_in[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("address_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 0.8;
		LEVEL 0 FOR 6.2;
		LEVEL Z FOR 121.8;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		LEVEL 0 FOR 10.2;
		NODE
		{
			REPEAT = 15;
			LEVEL Z FOR 21.0;
			LEVEL 0 FOR 11.0;
		}
		LEVEL Z FOR 21.0;
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("address_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 0.8;
		LEVEL 0 FOR 6.2;
		LEVEL Z FOR 121.8;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		LEVEL 0 FOR 10.2;
		NODE
		{
			REPEAT = 15;
			LEVEL Z FOR 21.0;
			LEVEL 1 FOR 11.0;
		}
		LEVEL Z FOR 21.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("address_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 0.8;
		LEVEL 0 FOR 6.2;
		LEVEL Z FOR 121.8;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		LEVEL 1 FOR 10.2;
		NODE
		{
			REPEAT = 8;
			LEVEL Z FOR 21.0;
			LEVEL 0 FOR 11.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL Z FOR 21.0;
			LEVEL 1 FOR 11.0;
		}
		LEVEL Z FOR 21.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("address_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 0.8;
		LEVEL 0 FOR 6.2;
		LEVEL Z FOR 121.8;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.2;
			LEVEL Z FOR 21.8;
		}
		LEVEL 1 FOR 10.2;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 21.0;
			LEVEL 0 FOR 11.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 21.0;
			LEVEL 1 FOR 11.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 21.0;
			LEVEL 0 FOR 11.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 21.0;
			LEVEL 1 FOR 11.0;
		}
		LEVEL Z FOR 21.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("address_out[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
		}
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("address_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("address_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 27;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("enable_cache_mem")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 15.2;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 15.2;
		}
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 11.2;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 9.0;
		}
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 11.2;
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("enable_data_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("HIT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 15.2;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 15.2;
		}
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 11.2;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 9.0;
		}
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 11.2;
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("memory_clk_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 129.0;
		NODE
		{
			REPEAT = 27;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 29.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("offset_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 26;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 29.0;
	}
}

TRANSITION_LIST("read")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 15.2;
		}
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.8;
		LEVEL 1 FOR 15.2;
		NODE
		{
			REPEAT = 30;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 15.2;
		}
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 3.2;
	}
}

TRANSITION_LIST("bank_number[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bank_number[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bank_to_use_LRU[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bank_to_use_LRU[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 31.2;
		}
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 903.2;
	}
}

TRANSITION_LIST("bank_to_use_TAG[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bank_to_use_TAG[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("cache_mem_write_impulse")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 501.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 11.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 11.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("is_busy")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 121.0;
		NODE
		{
			REPEAT = 27;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 21.0;
		}
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("is_changed")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("memory_clk_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 129.0;
		NODE
		{
			REPEAT = 27;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 29.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("prev_tag[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("prev_tag[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 488.0;
	}
}

TRANSITION_LIST("prev_tag[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 256.0;
		LEVEL 1 FOR 256.0;
		LEVEL 0 FOR 256.0;
		LEVEL 1 FOR 232.0;
	}
}

TRANSITION_LIST("prev_tag[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 104.0;
	}
}

TRANSITION_LIST("equal_tags")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("start_read_memory")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 6.2;
		LEVEL 0 FOR 121.8;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.2;
			LEVEL 0 FOR 21.8;
		}
		LEVEL 1 FOR 10.2;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 6.2;
		}
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 3.2;
	}
}

TRANSITION_LIST("start_write_memory")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reset_busy_flag")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("set_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("set_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("tag_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("tag_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("tag_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("tag_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "address_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enable_cache_mem";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "enable_data_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HIT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "offset_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bank_number";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "bank_number[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "bank_number[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "bank_to_use_LRU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "bank_to_use_LRU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "bank_to_use_LRU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "bank_to_use_TAG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "bank_to_use_TAG[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "bank_to_use_TAG[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "is_busy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "is_changed";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "memory_clk_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "memory_clk_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cache_mem_write_impulse";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prev_tag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "prev_tag[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "prev_tag[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "prev_tag[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "prev_tag[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "equal_tags";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_read_memory";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_write_memory";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_busy_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "set_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "set_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "set_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "tag_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "tag_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "tag_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "tag_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "tag_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

TIME_BAR
{
	TIME = 128000;
	MASTER = TRUE;
}
;
